snippet class "Create an empty class" b
public class ${1:ClassName}$2
{
	$0
}
endsnippet

snippet classc "Create an class with a constructor" b
public class ${1:ClassName}$2
{
	public $1($3)
	{
		$0
	}
}
endsnippet

snippet interface "Create an empty interface" b
public interface ${1:InterfaceName}
{
	$0
}
endsnippet

snippet method "Create a method" b
${1:public} ${2:void} ${3:methodName}($4)
{ // {{{
	$0
} // }}}
endsnippet

snippet methodo "Override a method" b
@Override
${1:public} ${2:void} ${3:methodName}($4)
{ // {{{
	$0
} // }}}
endsnippet

snippet tostring "toString method" b
@Override
public String toString()
{ // {{{
	return "$0";
} // }}}
endsnippet

snippet get "getter method" b
${1:public} ${2:FieldType} get${4:Field}()
{ // {{{
	return this.`!p snip.rv = re.sub('([a-zA-Z])', lambda x: x.groups()[0].lower(), t[4], 1)`;
} // }}}$0
endsnippet

snippet set "setter method" b
${1:public} ${2:void} set${3:Field}(${4:FieldType} `!p snip.rv = re.sub('([a-zA-Z])', lambda x: x.groups()[0].lower(), t[3], 1)`)
{ // {{{
	this.`!p snip.rv = re.sub('([a-zA-Z])', lambda x: x.groups()[0].lower(), t[3], 1)` = `!p snip.rv = re.sub('([a-zA-Z])', lambda x: x.groups()[0].lower(), t[3], 1)`;
} // }}}$0
endsnippet
